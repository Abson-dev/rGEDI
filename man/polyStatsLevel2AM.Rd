% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyStatsLevel2AM.R
\name{polyStatsLevel2AM}
\alias{polyStatsLevel2AM}
\title{Compute descriptive statistics of GEDI Level2A-derived Metrics}
\usage{
polyStatsLevel2AM(level2AM, func, id=NULL)
}
\arguments{
\item{level2AM}{A GEDI Level2AM object (output of \code{\link[rGEDI:getLevel2AM]{getLevel2AM}} function). A S4 object of class "data.table".}

\item{func}{the function to be applied for computing the defined statistics}

\item{id}{a vector contatining the polygon id for each GEDI observation. Defaut is NULL}
}
\value{
A S4 object of class \code{\link[data.table:data.table]{data.table-class}}
containting Statistics of GEDI level2A defined metrics
}
\description{
Computes a Series of Statistics from GEDI-derived Elevation and Height Metrics (Level2A)
within defined polygon ids or entire area
}
\examples{
\dontrun{
# specify the path to download GEDI example dataset
outdir<-getwd()

# downloading GEDI example dataset (zip file)
download.file(
             paste0(
                    "https://github.com/carlos-alberto-silva/rGEDI/",
                    "releases/download/examples/examples.zip"
             ),
             destfile=paste0(outdir,"/examples.zip"))

# unzip the file
unzip(paste0(outdir,"\\\\examples.zip"))

# specify the path to GEDI level2A data
level2apath = paste0(outdir,"\\\\GEDI02_A_2019108080338_O01964_T05337_02_001_01_sub.h5")

# Reading GEDI level2A data
level2a<-readLevel2A(level2apath)

# specify the path to shapefile
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(raster)
polygon_spdf<-shapefile(polygons_filepath)

# Get GEDI Eleveation and Relative Metrics (level2A)
level2AM<-getLevel2AM(level2a)
head(level2AM)

# clipping level2a by geometry
level2AM_clip = clipLevel2AMGeometry(level2AM, polygon_spdf, split_by="id")

#' Define your own function
mySetOfMetrics = function(x)
{
metrics = list(
   min =min(x), # Min of x
   max = max(x), # Max of x
   mean = mean(x), # Mean of x
   sd = sd(x)# Sd of x
 )
 return(metrics)
}

# Computing the maximum of RH100
RH100max<-polyStatsLevel2AM(level2AM_clip,func=max(RH100), id=NULL)

# Computing the maximum of RH100 stratified by polygon
RH100max_poly<-polyStatsLevel2AM(level2AM_clip,func=max(RH100), id=NULL)

# Computing a serie statistics for GEDI metrics stratified by polygon
RH100metrics<-polyStatsLevel2AM(level2AM_clip,func=mySetOfMetrics(RH100),
                     id=level2AM_clip@data$id)
}
}
\seealso{
https://lpdaac.usgs.gov/products/gedi02_av001/
}
