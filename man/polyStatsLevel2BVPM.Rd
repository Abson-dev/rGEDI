% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyStatsLevel2BVPM.R
\name{polyStatsLevel2BVPM}
\alias{polyStatsLevel2BVPM}
\title{Compute descriptive statistics of GEDI Level2BVPM-derived Metrics}
\usage{
polyStatsLevel2BVPM(level2AM, func, id)
}
\arguments{
\item{level2BVPM}{A GEDI Level2BVPM object (output of \code{\link[rGEDI:getLevel2BVPM]{getLevel2BVPM}} function). A S4 object of class "data.table".}

\item{func}{the function to be applied for computing the defined statistics}

\item{id}{a vector contatining the polygon id for each GEDI observation. Defaut is NULL}
}
\value{
A S4 object of class \code{\link[data.table:data.table]{data.table-class}}
containting Statistics of GEDI level2BVPM defined metrics
}
\description{
Computes a Series of Statistics of GEDI-derived Canopy Cover and Vertical Profile metrics (Level2BVPM)
for all obsercation or only those defined within a giving polygon
}
\examples{
\dontrun{
# specify the path to GEDI Level 2B data
level2bpath <- system.file("extdata", "GEDIexample_level01B.h5", package="rGEDI")

# Reading GEDI level2B data
level2b <- readLevel2B(level2bpath)

# specify the path to shapefile
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(rgdal)
polygon_spdf<-readOGR(polygons_filepath)

# Get GEDI Canopy Cover and Vertical Profile Metrics
level2BVPM<-getLevel2BVPM(level2b)
head(level2BVPM)

# clipping level2BVPM by geometry
level2BVPM_clip = clipLevel2BVPMGeometry(level2BVPM, polygon_spdf, split_by="id")

#' Define your own function
mySetOfMetrics = function(x)
{
metrics = list(
   min =min(x), # Min of x
   max = max(x), # Max of x
   mean = mean(x), # Mean of x
   sd = sd(x)# Sd of x
 )
 return(metrics)
}

#' Computing the max of the Total Plant Area Index for all observations
pai_max<-polyStatsLevel2BVPM(level2BVPM_clip,func=max(pai), id=NULL)
head(pai_max)

#' Computing the max of the Total Plant Area Index for all observation within each polygon
pai_max_poly<-polyStatsLevel2BVPM(level2BVPM_clip,func=max(pai), id="id")
head(pai_max_poly)

#' Computing the serie of statistics of Foliage Clumping Index for all observation within each polygon
omega_metrics<-polyStatsLevel2BVPM(level2BVPM_clip,func=mySetOfMetrics(omega),
                     id=level2AM_clip@data$id)
head(omega_metrics)
}
}
