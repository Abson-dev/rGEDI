<<<<<<< HEAD
% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel2BVPM.R
\name{clipLevel2BVPMGeometry}
\alias{clipLevel2BVPMGeometry}
\title{Clip level2BVPM data by geometry}
\usage{
clipLevel2BVPM(level2BVPM, polygon_spdf,split_by)
}
\arguments{
\item{level2BVPM}{A GEDI Level2B object (output of \code{\link[rGEDI:readLevel1B]{readLevel1B}} function). A S4 object of class "gedi.level2b".}

\item{polygon_spdf}{Polygon. An object of class \code{\link[sp]{SpatialPolygonsDataFrame-class}},
which can be loaded as an ESRI shapefile using \code{\link[rgdal:readOGR]{readOGR}} function in the \emph{rgdal} package.}

\item{split_by}{Polygon id. If defined, GEDI data will be clipped by each polygon using the polygon id from table of attribute defined by the user}
}
\value{
An S4 object of class \code{\link[data.table:data.table]{data.table-class}}.
}
\description{
This function clips GEDI level2B-derived
Canopy Cover and Vertical Profile metrics within a given geometry
}
\examples{

# specify the path and data file and read it
level2bpath <- system.file("extdata", "GEDIexample_level02B.h5", package="rGEDI")

#'# reading GEDI level2B data
level2b <- readLevel2B(level2bpath)

# Get canopy cover and vertical profile metrics
level2BVPM<-getlevel2BVPM(level2b)

# specify the path to shapefile
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(rgdal)
polygon_spdf<-readOGR(polygons_filepath)

# clip level2BVPM by geometry
level2b_clip_geometry <- clipLevel2BVPMGeometry(level2BVPM,polygon_spdf,split_by="id")

library(leaflet)
leaflet() \%>\%
 addCircleMarkers(level2b_clip_geometry@dt$longitude_bin0,
                  level2b_clip_geometry@dt$latitude_bin0,
                  radius = 1,
                  opacity = 1,
                  color = "red")  \%>\%
 addScaleBar(options = list(imperial = FALSE)) \%>\%
 addPolygons(data=polygon_spdf,weight=1,col = 'white',
             opacity = 1, fillOpacity = 0) \%>\%
 addProviderTiles(providers$Esri.WorldImagery)
}
=======
% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel2BVPM.R
\name{clipLevel2BVPMGeometry}
\alias{clipLevel2BVPMGeometry}
\title{Clip GEDI level2bdt data by geometry}
\usage{
clipLevel2BVPMGeometry(x, polygon_spdf, split_by = NULL)
}
\arguments{
\item{polygon_spdf}{SpatialDataFrame. A polygon dataset for clipping the waveform}

\item{level2bdt}{level2bdt; S4 object of class "gedi.level1b.dt"}
}
\value{
Returns An object of class "gedi.level1b.dt"; subset of GEDI Level1B data
}
\description{
Clip GEDI level2bdt data within a given geometry area
}
\examples{

#' GEDI level1B file path
level1Bfilepath = system.file("extdata", "lvis_level1_clip.h5", package="rGEDI")

#' Reading GEDI level1B file
level1b = readLevel1b(level1Bfilepath)

#' Creating GEDI level2bdt object
level2bdt = level2bdt(level1b)

# Polgons file path
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading GEDI level2B file
polygon_spdf<-raster::shapefile(polygons_filepath)

clipped_level2bdt = clipLevel1Geometry(level2bdt, polygon_spdf)

library(leaflet)
leaflet() \%>\%
 addCircleMarkers(clipped_level2bdt@dt$longitude_bin0,
                  clipped_level2bdt@dt$latitude_bin0,
                  radius = 1,
                  opacity = 1,
                  color = "red")  \%>\%
 addScaleBar(options = list(imperial = FALSE)) \%>\%
 addPolygons(data=polygon_spdf,weight=1,col = 'white',
             opacity = 1, fillOpacity = 0) \%>\%
 addProviderTiles(providers$Esri.WorldImagery)
}
>>>>>>> caio
