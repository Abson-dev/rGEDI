% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel2BPAIProfile.R
\name{clipLevel2BPAIProfileGeometry}
\alias{clipLevel2BPAIProfileGeometry}
\title{Clip level2BPAIProfile data by geometry}
\usage{
clipLevel2BPAIProfileGeometry(level2BPAIProfile, polygon_spdf, output)
}
\arguments{
\item{polygon_spdf}{Polygon. An object of class \code{\link[sp]{SpatialPolygonsDataFrame-class}},
which can be loaded as an ESRI shapefile using \code{\link[rgdal:readOGR]{readOGR}} function in the \emph{rgdal} package.}

\item{split_by}{Polygon id. If defined, GEDI data will be clipped by each polygon using the polygon id from table of attribute defined by the user}

\item{level2BPAIProfile}{A GEDI Level2B object (output of \code{\link[rGEDI:getLevel2BPAIProfile]{getLevel2BPAIProfile}} function). A S4 object of class "gedi.level2b".}
}
\value{
An S4 object of class \code{\link[data.table:data.table]{data.table-class}}.
}
\description{
This function clips GEDI level2B-derived
Plant Area Index profile within given geometry
}
\examples{

# specify the path and data file and read it
level2bpath <- system.file("extdata", "GEDIexample_level02B.h5", package="rGEDI")

#'# reading GEDI level2B data
level2b <- readLevel2B(level2bpath)

# Get Plant Area Index profile
level2BPAIProfile<-getLevel2BPAIProfile(level2b)

# specify the path to shapefile
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(rgdal)
polygon_spdf<-readOGR(polygons_filepath)

# clip level2BPAIProfile by geometry
level2b_clip_geometry <- clipLevel2BPAIGeometry(level2BPAIProfile,polygon_spdf, split_by="id")

}
