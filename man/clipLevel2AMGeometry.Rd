<<<<<<< HEAD
% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel2AM.R
\name{clipLevel2AMGeometry}
\alias{clipLevel2AMGeometry}
\title{Clip Level2AM data by Coordinates}
\usage{
cliplevel2AM(level2a, polygon_spdf, split_by)
}
\arguments{
\item{level2AM}{A GEDI Level2A object (output of \code{\link[rGEDI:readLevel2A]{readLevel2A}} function). A S4 object of class "gedi.level2a".}

\item{polygon_spdf}{Polygon. An object of class \code{\link[sp]{SpatialPolygonsDataFrame-class}},
which can be loaded as an ESRI shapefile using \code{\link[rgdal:readOGR]{readOGR}} function in the \emph{rgdal} package.}

\item{split_by}{Polygon id. If defined, GEDI data will be clipped by each polygon using the polygon id from table of attribute defined by the user}
}
\value{
A S4 object of class \code{\link[data.table:data.table]{data.table-class}}.
}
\description{
This function clips GEDI Level2A extracted Elevation and Height Metrics (Level2AM)
within given bounding coordinates
}
\examples{

#' GEDI level2A file path
level2afilepath = system.file("extdata", "lvis_level1_clip.h5", package="rGEDI")

#' Reading GEDI level2A file
level2a = readLevel2A(level2afilepath)

#' Extracting GEDI Elevation and Height Metrics
level2AM = getLevel2AM(level2a)

# specify the path to shapefile
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading shapefile as SpatialPolygonsDataFrame object
library(rgdal)
polygon_spdf<-readOGR(polygons_filepath)

level2AM_clip = clipLevel2AMGeometry(level2AM, polygon_spdf, split_by="id")

library(leaflet)
leaflet() \%>\%
 addCircleMarkers(clipped_level1Bdt@dt$longitude_bin0,
                  clipped_level1Bdt@dt$latitude_bin0,
                  radius = 1,
                  opacity = 1,
                  color = "red")  \%>\%
 addScaleBar(options = list(imperial = FALSE)) \%>\%
 addPolygons(data=polygon_spdf,weight=1,col = 'white',
             opacity = 1, fillOpacity = 0) \%>\%
 addProviderTiles(providers$Esri.WorldImagery)
}
=======
% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clipLevel2AM.R
\name{clipLevel2AMGeometry}
\alias{clipLevel2AMGeometry}
\title{Clip GEDI level2adt data by geometry}
\usage{
clipLevel2AMGeometry(x, polygon_spdf, split_by = "id")
}
\arguments{
\item{polygon_spdf}{SpatialDataFrame. A polygon dataset for clipping the waveform}

\item{level2adt}{level2adt; S4 object of class "gedi.level1b.dt"}
}
\value{
Returns An object of class "gedi.level1b.dt"; subset of GEDI Level1B data
}
\description{
Clip GEDI level2adt data within a given geometry area
}
\examples{

#' GEDI level1B file path
level1Bfilepath = system.file("extdata", "lvis_level1_clip.h5", package="rGEDI")

#' Reading GEDI level1B file
level1b = readLevel1b(level1Bfilepath)

#' Creating GEDI level2adt object
level2adt = level2adt(level1b)

# Polgons file path
polygon_filepath <- system.file("extdata", "clip_polygon.shp", package="rGEDI")

# Reading GEDI level2B file
polygon_spdf<-raster::shapefile(polygons_filepath)

clipped_level2adt = clipLevel1Geometry(level2adt, polygon_spdf)

library(leaflet)
leaflet() \%>\%
 addCircleMarkers(clipped_level2adt@dt$longitude_bin0,
                  clipped_level2adt@dt$latitude_bin0,
                  radius = 1,
                  opacity = 1,
                  color = "red")  \%>\%
 addScaleBar(options = list(imperial = FALSE)) \%>\%
 addPolygons(data=polygon_spdf,weight=1,col = 'white',
             opacity = 1, fillOpacity = 0) \%>\%
 addProviderTiles(providers$Esri.WorldImagery)
}
>>>>>>> caio
